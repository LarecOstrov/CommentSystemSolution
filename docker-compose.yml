
x-environment: &common-environment
  ASPNETCORE_ENVIRONMENT: Development
  AppOptions__Redis__Connection: redis:6379
  AppOptions__RabbitMq__HostName: rabbitmq
  AppOptions__RabbitMq__Port: 5672
  AppOptions__RabbitMq__UserName: CommentSystemAdmin
  AppOptions__RabbitMq__Password: CommentSystem!2025  
  AppOptions__ConnectionStrings__DefaultConnection: "Server=db;Database=CommentSystemDB;User Id=SA;Password=CommentSystem!2025;TrustServerCertificate=True"
  AppOptions__WebSoketPort: "5002"

services:
  client:
    build:
      context: ./CommentSystemClient
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      app:
        condition: service_healthy
  app:
    build:
      context: .
      dockerfile: CommentSystem/Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
    env_file:
      - .env
    environment:
      <<: *common-environment
      AppOptions__AzureBlobStorage__ConnectionString: ${AZURE_STORAGE_CONNECTION}
      AppOptions__AzureBlobStorage__ContainerName: ${AZURE_STORAGE_CONTAINER}
      ASPNETCORE_URLS: http://+:5000;http://+:5001
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      saver:
        condition: service_healthy
      captcha:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:5000/health || curl -f http://localhost:5001/health"]
      interval: 30s
      retries: 5
      timeout: 10s
      start_period: 20s

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql_server
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "CommentSystem!2025"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    volumes:
      - mssql_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 20s
      retries: 5
      timeout: 10s
      start_period: 20s

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    command: ["redis-server"]
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 3s

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq_server
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
       <<: *common-environment
       RABBITMQ_DEFAULT_USER: CommentSystemAdmin
       RABBITMQ_DEFAULT_PASS: CommentSystem!2025
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s

  saver:
    build:
      context: .
      dockerfile: CommentConsumerService/Dockerfile
    ports:
      - "5002:5002"
      - "5003:5003"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      <<: *common-environment
      ASPNETCORE_URLS: http://+:5002;http://+:5003
    restart: always
    healthcheck:
      test: ["CMD", "sh", "-c", "pgrep -f 'dotnet CommentConsumerService.dll' || exit 1"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 20s
    deploy:
      replicas: 1

  captcha:
    build:
      context: .
      dockerfile: CaptchaServiceAPI/Dockerfile
    ports:
      - "5004:5004"
      - "5005:5005"
    environment:
      <<: *common-environment
      ASPNETCORE_URLS: http://+:5004;http://+:5005
    volumes:
      - dataprotection-keys:/root/.aspnet/DataProtection-Keys
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:5004/health || curl -f http://localhost:5005/health"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 20s

volumes:
  mssql_data:
  rabbitmq_data:
  dataprotection-keys:
